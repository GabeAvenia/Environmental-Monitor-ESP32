@startuml
skinparam classAttributeIconSize 0

package "Communications System" {
  class CommunicationManager {
    -scpiParser : SCPI_Parser*
    -sensorManager : SensorManager*
    -configManager : ConfigManager*
    -errorHandler : ErrorHandler*
    -ledManager : LedManager*
    -commandHandlers : map<String, function>
    +begin(baudRate: long) : void
    +setupCommands() : void
    +processIncomingData() : void
    +processCommandLine() : void
    +parseCommand(rawCommand: String, command: String&, params: vector<String>&) : void
    +processCommand(command: String, params: vector<String>&) : bool
    +handleIdentify(params: vector<String>&) : bool
    +handleMeasure(params: vector<String>&) : bool
    +handleListSensors(params: vector<String>&) : bool
    +handleGetConfig(params: vector<String>&) : bool
    +handleSetBoardId(params: vector<String>&) : bool
    +handleUpdateConfig(params: vector<String>&) : bool
    +handleReset(params: vector<String>&) : bool
    +handleTestErrorLevel(params: vector<String>&, severity: ErrorSeverity) : bool
  }

  class SCPI_Parser {
    +RegisterCommand(command: String, handler: Function) : void
    +ProcessInput(interface: Stream, buffer: char*) : void
  }

  class SensorManager
  class ConfigManager
  class ErrorHandler
  class LedManager

  CommunicationManager o-- SCPI_Parser : uses
  CommunicationManager --> SensorManager : requests data
  CommunicationManager --> ConfigManager : updates config
  CommunicationManager --> ErrorHandler : reports errors
  CommunicationManager --> LedManager : controls indicators
}

@enduml